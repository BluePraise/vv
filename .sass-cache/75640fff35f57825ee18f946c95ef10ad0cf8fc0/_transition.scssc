3.2.12 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@children[o:Sass::Tree::ImportNode:@imported_file0;i;0:@imported_filename"shared;	[ :@options{ o:Sass::Tree::CommentNode
;i:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;	[ :
@type:silent;@o:Sass::Tree::VariableNode:@guarded"!default;i:
@expro:Sass::Script::String	;i;"all;:identifier;@:
@name" default-transition-property;	[ ;@o;;"!default;i;o:Sass::Script::Number;i;i:@denominator_units[ ;@:@numerator_units["s:@original"1s;" default-transition-duration;	[ ;@o;;"!default;i;o:Sass::Script::Bool;i;F;@;" default-transition-function;	[ ;@o;;"!default;i;o;;i;F;@;"default-transition-delay;	[ ;@o;;"!default;i;o:Sass::Script::List	:@separator:
comma;i;[o;	;i;"transform;;;@o;	;i;"transform-origin;;;@;@;"#transitionable-prefixed-values;	[ ;@o;
;i!;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;	[ ;;;@o:Sass::Tree::MixinDefNode:
@args[[o:Sass::Script::Variable;"property-1;@:@underscored_name"property_1o;"	;i&;" default-transition-property;@;#" default_transition_property[o;";"property-2;@;#"property_2o;;i';F;@[o;";"property-3;@;#"property_3o;;i(;F;@[o;";"property-4;@;#"property_4o;;i);F;@[o;";"property-5;@;#"property_5o;;i*;F;@[o;";"property-6;@;#"property_6o;;i+;F;@[o;";"property-7;@;#"property_7o;;i,;F;@[o;";"property-8;@;#"property_8o;;i-;F;@[o;";"property-9;@;#"property_9o;;i.;F;@[o;";"property-10;@;#"property_10o;;i/;F;@;i0;"transition-property;T;	[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operator:eq:
@linei1:@options{ :@operand2o:Sass::Script::String	;i1:@value"string:
@type:identifier;	@:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;i1:
@name"property-1;	@:@underscored_name"property_1;i1:@keywords{ ;"type-of;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;i1:
@expro;;[o;	;i1;"property-1;	@;"property_1;i1;{ ;"unquote;	@;0;"property-1:@children[ ;	@o;;0;i2;o:Sass::Script::Funcall;![o;"	;i2;"property-1;@;#"property_1o;"	;i2;"property-2;@;#"property_2o;"	;i2;"property-3;@;#"property_3o;"	;i2;"property-4;@;#"property_4o;"	;i2;"property-5;@;#"property_5o;"	;i2;"property-6;@;#"property_6o;"	;i2;"property-7;@;#"property_7o;"	;i2;"property-8;@;#"property_8o;"	;i2;"property-9;@;#"property_9o;"	;i2;"property-10;@;#"property_10;i2:@keywords{ ;"compact;@:@splat0;"properties;	[ ;@u;$Å[o:Sass::Script::Variable	:
@linei3:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:@prop_syntax:new;i3:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	;i3;"-webkit:
@type:identifier;@o; 	;i3;"properties;@;	"properties;i3:@keywords{ ;"prefixed-for-transition;@:@splat0;[" -webkit-transition-property:@children[ ;@:
@tabsi u;$Á[o:Sass::Script::Variable	:
@linei4:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:@prop_syntax:new;i4:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	;i4;"	-moz:
@type:identifier;@o; 	;i4;"properties;@;	"properties;i4:@keywords{ ;"prefixed-for-transition;@:@splat0;["-moz-transition-property:@children[ ;@:
@tabsi u;$¹[o:Sass::Script::Variable	:
@linei5:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:@prop_syntax:new;i5:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	;i5;"-o:
@type:identifier;@o; 	;i5;"properties;@;	"properties;i5:@keywords{ ;"prefixed-for-transition;@:@splat0;["-o-transition-property:@children[ ;@:
@tabsi o:Sass::Tree::PropNode:@prop_syntax:new;i6;o;"	;i6;"properties;@;#"properties;["transition-property;	[ ;@:
@tabsi ;@;'0o;
;i9;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;	[ ;;;@o; ;![[o;";"duration-1;@;#"duration_1o;"	;i>;" default-transition-duration;@;#" default_transition_duration[o;";"duration-2;@;#"duration_2o;;i?;F;@[o;";"duration-3;@;#"duration_3o;;i@;F;@[o;";"duration-4;@;#"duration_4o;;iA;F;@[o;";"duration-5;@;#"duration_5o;;iB;F;@[o;";"duration-6;@;#"duration_6o;;iC;F;@[o;";"duration-7;@;#"duration_7o;;iD;F;@[o;";"duration-8;@;#"duration_8o;;iE;F;@[o;";"duration-9;@;#"duration_9o;;iF;F;@[o;";"duration-10;@;#"duration_10o;;iG;F;@;iH;"transition-duration;T;	[u;$Ù[o:Sass::Script::Operation
:@operator:eq:
@lineiI:@options{ :@operand2o:Sass::Script::String	;iI:@value"string:
@type:identifier;	@:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;iI:
@name"duration-1;	@:@underscored_name"duration_1;iI:@keywords{ ;"type-of;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;iI:
@expro;;[o;	;iI;"duration-1;	@;"duration_1;iI;{ ;"unquote;	@;0;"duration-1:@children[ ;	@o;;0;iJ;o;%;![o;"	;iJ;"duration-1;@;#"duration_1o;"	;iJ;"duration-2;@;#"duration_2o;"	;iJ;"duration-3;@;#"duration_3o;"	;iJ;"duration-4;@;#"duration_4o;"	;iJ;"duration-5;@;#"duration_5o;"	;iJ;"duration-6;@;#"duration_6o;"	;iJ;"duration-7;@;#"duration_7o;"	;iJ;"duration-8;@;#"duration_8o;"	;iJ;"duration-9;@;#"duration_9o;"	;iJ;"duration-10;@;#"duration_10;iJ;&{ ;"compact;@;'0;"durations;	[ ;@o:Sass::Tree::MixinNode;![o;	;iK;"transition-duration;;;@o;"	;iK;"durations;@;#"durationso;	;iL;"	-moz;;;@o;	;iL;"-webkit;;;@o;	;iL;"-o;;;@o:!Sass::Script::UnaryOperation	:@operator:not;iL:@operando;	;iL;"-ms;;;@;@o;-	;.;/;iL;0o;	;iL;"-khtml;;;@;@o;	;iL;"official;;;@;iM;&{ ;"experimental;	[ ;@;'0;@;'0o;
;iP;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;	[ ;;;@o; ;![[o;";"function-1;@;#"function_1o;"	;iV;" default-transition-function;@;#" default_transition_function[o;";"function-2;@;#"function_2o;;iW;F;@[o;";"function-3;@;#"function_3o;;iX;F;@[o;";"function-4;@;#"function_4o;;iY;F;@[o;";"function-5;@;#"function_5o;;iZ;F;@[o;";"function-6;@;#"function_6o;;i[;F;@[o;";"function-7;@;#"function_7o;;i\;F;@[o;";"function-8;@;#"function_8o;;i];F;@[o;";"function-9;@;#"function_9o;;i^;F;@[o;";"function-10;@;#"function_10o;;i_;F;@;i`;"transition-timing-function;T;	[o;;0;ia;o;%;![o;"	;ia;"function-1;@;#"function_1;ia;&{ ;"unquote;@;'0;"function-1;	[ ;@o;;0;ib;o;%;![o;"	;ib;"function-1;@;#"function_1o;"	;ib;"function-2;@;#"function_2o;"	;ib;"function-3;@;#"function_3o;"	;ib;"function-4;@;#"function_4o;"	;ib;"function-5;@;#"function_5o;"	;ib;"function-6;@;#"function_6o;"	;ib;"function-7;@;#"function_7o;"	;ib;"function-8;@;#"function_8o;"	;ib;"function-9;@;#"function_9o;"	;ib;"function-10;@;#"function_10;ib;&{ ;"compact;@;'0;"functions;	[ ;@o;,;![o;	;ic;"transition-timing-function;;;@o;"	;ic;"functions;@;#"functionso;	;id;"	-moz;;;@o;	;id;"-webkit;;;@o;	;id;"-o;;;@o;-	;.;/;id;0o;	;id;"-ms;;;@;@o;-	;.;/;id;0o;	;id;"-khtml;;;@;@o;	;id;"official;;;@;ie;&{ ;"experimental;	[ ;@;'0;@;'0o;
;ih;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;	[ ;;;@o; ;![[o;";"delay-1;@;#"delay_1o;"	;im;"default-transition-delay;@;#"default_transition_delay[o;";"delay-2;@;#"delay_2o;;in;F;@[o;";"delay-3;@;#"delay_3o;;io;F;@[o;";"delay-4;@;#"delay_4o;;ip;F;@[o;";"delay-5;@;#"delay_5o;;iq;F;@[o;";"delay-6;@;#"delay_6o;;ir;F;@[o;";"delay-7;@;#"delay_7o;;is;F;@[o;";"delay-8;@;#"delay_8o;;it;F;@[o;";"delay-9;@;#"delay_9o;;iu;F;@[o;";"delay-10;@;#"delay_10o;;iv;F;@;iw;"transition-delay;T;	[u;$Ê[o:Sass::Script::Operation
:@operator:eq:
@lineix:@options{ :@operand2o:Sass::Script::String	;ix:@value"string:
@type:identifier;	@:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;ix:
@name"delay-1;	@:@underscored_name"delay_1;ix:@keywords{ ;"type-of;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;ix:
@expro;;[o;	;ix;"delay-1;	@;"delay_1;ix;{ ;"unquote;	@;0;"delay-1:@children[ ;	@o;;0;iy;o;%;![o;"	;iy;"delay-1;@;#"delay_1o;"	;iy;"delay-2;@;#"delay_2o;"	;iy;"delay-3;@;#"delay_3o;"	;iy;"delay-4;@;#"delay_4o;"	;iy;"delay-5;@;#"delay_5o;"	;iy;"delay-6;@;#"delay_6o;"	;iy;"delay-7;@;#"delay_7o;"	;iy;"delay-8;@;#"delay_8o;"	;iy;"delay-9;@;#"delay_9o;"	;iy;"delay-10;@;#"delay_10;iy;&{ ;"compact;@;'0;"delays;	[ ;@o;,;![o;	;iz;"transition-delay;;;@o;"	;iz;"delays;@;#"delayso;	;i{;"	-moz;;;@o;	;i{;"-webkit;;;@o;	;i{;"-o;;;@o;-	;.;/;i{;0o;	;i{;"-ms;;;@;@o;-	;.;/;i{;0o;	;i{;"-khtml;;;@;@o;	;i{;"official;;;@;i|;&{ ;"experimental;	[ ;@;'0;@;'0o;
;i;["*/* Transition all-in-one shorthand */;	[ ;;;@o; ;![	[o;";"property;@;#"propertyo;"	;i};" default-transition-property;@;#" default_transition_property[o;";"duration;@;#"durationo;"	;i~;" default-transition-duration;@;#" default_transition_duration[o;";"function;@;#"functiono;"	;i;" default-transition-function;@;#" default_transition_function[o;";"
delay;@;#"
delayo;"	;i;"default-transition-delay;@;#"default_transition_delay;i;"single-transition;T;	[o;,;![o;%;![o;	;:
space;i;[	o;"	;i;"property;@;#"propertyo;"	;i;"duration;@;#"durationo;"	;i;"function;@;#"functiono;"	;i;"
delay;@;#"
delay;@;i;&{ ;"compact;@;'0;i;&{ ;"transition;	[ ;@;'0;@;'0o; ;![[o;";"transition-1;@;#"transition_1o;	;i;"default;;;@[o;";"transition-2;@;#"transition_2o;;i;F;@[o;";"transition-3;@;#"transition_3o;;i;F;@[o;";"transition-4;@;#"transition_4o;;i;F;@[o;";"transition-5;@;#"transition_5o;;i;F;@[o;";"transition-6;@;#"transition_6o;;i;F;@[o;";"transition-7;@;#"transition_7o;;i;F;@[o;";"transition-8;@;#"transition_8o;;i;F;@[o;";"transition-9;@;#"transition_9o;;i;F;@[o;";"transition-10;@;#"transition_10o;;i;F;@;i;"transition;T;	[u;$÷[o:Sass::Script::Operation
:@operator:eq:
@linei:@options{ :@operand2o:Sass::Script::String	;i:@value"default:
@type:identifier;	@:@operand1o:Sass::Script::Variable	;i:
@name"transition-1;	@:@underscored_name"transition_10[o:Sass::Tree::VariableNode:@guarded0;i:
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::List	:@separator:
space;i;[	o;	;i;" default-transition-property;	@;" default_transition_propertyo;	;i;" default-transition-duration;	@;" default_transition_durationo;	;i;" default-transition-function;	@;" default_transition_functiono;	;i;"default-transition-delay;	@;"default_transition_delay;	@;i:@keywords{ ;"compact;	@:@splat0;"transition-1:@children[ ;	@o;;0;i;o;;i;F;@;"transitions;	[ ;@u;$[o:Sass::Script::Operation
:@operator:and:
@linei:@options{ :@operand2o; 
;:eq;i;	@;
o:Sass::Script::String	;i:@value"	list:
@type:identifier;	@:@operand1o:Sass::Script::Funcall:
@args[o;;[o:Sass::Script::Variable	;i:
@name"transition-1;	@:@underscored_name"transition_1o:Sass::Script::Number;i;i:@denominator_units[ ;	@:@numerator_units[ :@original"1;i:@keywords{ ;"nth;	@:@splat0;i;{ ;"type-of;	@;0;o; 
;;;i;	@;
o;	;i;"	list;;;	@;o;;[o;	;i;"transition-1;	@;"transition_1;i;{ ;"type-of;	@;0u:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:
@linei:
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;i:
@name"transition-1:@options{ :@underscored_name"transition_1o;	;i;"transition-2;@;"transition_2o;	;i;"transition-3;@;"transition_3o;	;i;"transition-4;@;"transition_4o;	;i;"transition-5;@;"transition_5o;	;i;"transition-6;@;"transition_6o;	;i;"transition-7;@;"transition_7o;	;i;"transition-8;@;"transition_8o;	;i;"transition-9;@;"transition_9o;	;i;"transition-10;@;"transition_10;i:@keywords{ ;"compact;@:@splat0;"transitions:@children[ ;@[o:Sass::Tree::VariableNode:@guarded0;i:
@expro;;[o;	;i;"transition-1;	@;"transition_1o;;[o;	;i;"transition-2;	@;"transition_2o;	;i;"transition-3;	@;"transition_3o;	;i;"transition-4;	@;"transition_4o;	;i;"transition-5;	@;"transition_5o;	;i;"transition-6;	@;"transition_6o;	;i;"transition-7;	@;"transition_7o;	;i;"transition-8;	@;"transition_8o;	;i;"transition-9;	@;"transition_9o;	;i;"transition-10;	@;"transition_10;i;{ ;"compact;	@;0o;	;i;"
comma;;;	@;i;{ ;"	join;	@;0;"transitions:@children[ ;	@o;;0;i;o;%;![ ;i;&{ ;"comma-list;@;'0;"delays;	[ ;@o;;0;i;o;;i;F;@;"has-delays;	[ ;@o;;0;i;o;%;![ ;i;&{ ;"comma-list;@;'0;"webkit-value;	[ ;@o;;0;i;o;%;![ ;i;&{ ;"comma-list;@;'0;"moz-value;	[ ;@o;;0;i;o;%;![ ;i;&{ ;"comma-list;@;'0;"o-value;	[ ;@o;
;i ;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;	[ ;;;@o:Sass::Tree::EachNode;i¢;T;	[o;
;i£;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;	[ ;;;@o;;0;i¥;o;%;![o;"	;i¥;"transition;@;#"transitiono;;i¥;i;[ ;@;[ ;"1;i¥;&{ ;"nth;@;'0;"property;	[ ;@o;;0;i¦;o;;i¦;F;@;"duration;	[ ;@o;;0;i§;o;;i§;F;@;"timing-function;	[ ;@o;;0;i¨;o;;i¨;F;@;"
delay;	[ ;@u;$[o:Sass::Script::Operation
:@operator:gt:
@linei©:@options{ :@operand2o:Sass::Script::Number;i©:@valuei:@denominator_units[ ;	@:@numerator_units[ :@original"1:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;i©:
@name"transition;	@:@underscored_name"transition;i©:@keywords{ ;"length;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;i©:
@expro;;[o;	;i©;"transition;	@;"transitiono;;i©;i;@	;	@;[ ;"2;i©;{ ;"nth;	@;0;"duration:@children[ ;	@u;$[o:Sass::Script::Operation
:@operator:gt:
@lineiª:@options{ :@operand2o:Sass::Script::Number;iª:@valuei:@denominator_units[ ;	@:@numerator_units[ :@original"2:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;iª:
@name"transition;	@:@underscored_name"transition;iª:@keywords{ ;"length;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;iª:
@expro;;[o;	;iª;"transition;	@;"transitiono;;iª;i;@	;	@;[ ;"3;iª;{ ;"nth;	@;0;"timing-function:@children[ ;	@u;$Y[o:Sass::Script::Operation
:@operator:gt:
@linei«:@options{ :@operand2o:Sass::Script::Number;i«:@valuei:@denominator_units[ ;	@:@numerator_units[ :@original"3:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;i«:
@name"transition;	@:@underscored_name"transition;i«:@keywords{ ;"length;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;i«:
@expro;;[o;	;i«;"transition;	@;"transitiono;;i«;i	;@	;	@;[ ;"4;i«;{ ;"nth;	@;0;"
delay:@children[ ;	@o;;0;i«;o:Sass::Script::Bool;i«;T;	@;"has-delays;[ ;	@o;
;i­;[";/* If a delay is provided without a timing function */;	[ ;;;@u;$g[o:Sass::Script::Operation
:@operator:and:
@linei®:@options{ :@operand2o:!Sass::Script::UnaryOperation	;:not;i®:@operando:Sass::Script::Variable	;i®:
@name"
delay;	@:@underscored_name"
delay;	@:@operand1o:Sass::Script::Funcall:
@args[o;	;i®;"timing-function;	@;"timing_function;i®:@keywords{ ;"is-time;	@:@splat00[o:Sass::Tree::VariableNode:@guarded0;i®:
@expro;	;i®;"timing-function;	@;"timing_function;"
delay:@children[ ;	@o;;0;i®;o:Sass::Script::Bool;i®:@valueF;	@;"timing-function;[ ;	@o;;0;i®;o;;i®;T;	@;"has-delays;[ ;	@o;
;i°;["9/* Keep a list of delays in case one is specified */;	[ ;;;@o;;0;i±;o;%;![o;"	;i±;"delays;@;#"delayso;%;![o;"	;i±;"
delay;@;#"
delayo;"	;i±;"
delay;@;#"
delayo;;i±;i ;[ ;@;["s;"0s;i±;&{ ;"if;@;'0;i±;&{ ;"append;@;'0;"delays;	[ ;@o;;0;i³;o;%;![o;"	;i³;"webkit-value;@;#"webkit_valueo;%;![o;	;;1;i³;[o;%;![o;	;i³;"-webkit;;;@o;"	;i³;"property;@;#"property;i³;&{ ;"prefixed-for-transition;@;'0o;"	;i³;"duration;@;#"durationo;"	;i³;"timing-function;@;#"timing_function;@;i³;&{ ;"compact;@;'0;i³;&{ ;"append;@;'0;"webkit-value;	[ ;@o;;0;i´;o;%;![o;"	;i´;"moz-value;@;#"moz_valueo;%;![o;	;;1;i´;[	o;%;![o;	;i´;"	-moz;;;@o;"	;i´;"property;@;#"property;i´;&{ ;"prefixed-for-transition;@;'0o;"	;i´;"duration;@;#"durationo;"	;i´;"timing-function;@;#"timing_functiono;"	;i´;"
delay;@;#"
delay;@;i´;&{ ;"compact;@;'0;i´;&{ ;"append;@;'0;"moz-value;	[ ;@o;;0;iµ;o;%;![o;"	;iµ;"o-value;@;#"o_valueo;%;![o;	;;1;iµ;[	o;%;![o;	;iµ;"-o;;;@o;"	;iµ;"property;@;#"property;iµ;&{ ;"prefixed-for-transition;@;'0o;"	;iµ;"duration;@;#"durationo;"	;iµ;"timing-function;@;#"timing_functiono;"	;iµ;"
delay;@;#"
delay;@;iµ;&{ ;"compact;@;'0;iµ;&{ ;"append;@;'0;"o-value;	[ ;@;@:	@var"transition:
@listo;"	;i¢;"transitions;@;#"transitionsu;$Ý[o:Sass::Script::Variable	:
@linei¸:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:@prop_syntax:new;i¸:@valueo; 	;i¸;"webkit-value;@;	"webkit_value;["-webkit-transition:@children[ ;@:
@tabsi o:Sass::Tree::CommentNode
;i¹;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;[ :
@type:silent;@u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:
@name"has-delays:@options{ :@underscored_name"has_delays0[o:Sass::Tree::PropNode:@prop_syntax:new;iº:@valueo; 	;iº;"delays;@;	"delays;["-webkit-transition-delay:@children[ ;@:
@tabsi u;$#[o:Sass::Script::Variable	:
@linei»:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:@prop_syntax:new;i»:@valueo; 	;i»;"moz-value;@;	"moz_value;["-moz-transition:@children[ ;@:
@tabsi u;$[o:Sass::Script::Variable	:
@linei¼:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:@prop_syntax:new;i¼:@valueo; 	;i¼;"o-value;@;	"o_value;["-o-transition:@children[ ;@:
@tabsi o;(;);*;i½;o;"	;i½;"transitions;@;#"transitions;["transition;	[ ;@;+i ;@;'0o;
;iÀ;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;	[ ;;;@o:Sass::Tree::FunctionNode;![[o;";"	list;@;#"	listo;	;;1;iÁ;[ ;@;iÁ;"comma-list;T;	[o:Sass::Tree::ReturnNode	;iÂ;o;%;![o;	;;1;iÂ;[ ;@o;"	;iÂ;"	list;@;#"	listo;	;iÂ;"
comma;;;@;iÂ;&{ ;"	join;@;'0;	[ ;@;@;'0o;
;iÅ;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;	[ ;;;@o;5;![[o;";"prefix;@;#"prefix0[o;";"property;@;#"property0;iÆ;"prefixed-for-transition;T;	[u;$®[o:Sass::Script::Operation
:@operator:eq:
@lineiÇ:@options{ :@operand2o:Sass::Script::String	;iÇ:@value"	list:
@type:identifier;	@:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;iÇ:
@name"property;	@:@underscored_name"property;iÇ:@keywords{ ;"type-of;	@:@splat0u:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:
@lineiÎ:
@name"#transitionable-prefixed-values:@options{ :@underscored_name"#transitionable_prefixed_valueso;	;iÎ;	"property;
@
;"property;iÎ:@keywords{ ;	"
index;
@
:@splat0u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:
@name"property:@options{ :@underscored_name"property:@children[ ;
@
[o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation:	@mido;	;iÏ;	"prefix;
@
;"prefix:@whitespace_after0;iÏ:@before0:@whitespace_beforei;
@
:@aftero;;o;	;iÏ;	"property;
@
;"property;0;iÏ;o;;o:Sass::Script::String	;iÏ:@value"-:
@type:identifier;
@
;F;iÏ;0;0;
@
;0:@originally_text:originally_text;0;
@
;0;F;F:@children[ ;
@
[o:Sass::Tree::VariableNode:@guarded0;iÈ:
@expro;;[ ;iÈ;{ ;"comma-list;	@;0;"new-list:@children[ ;	@o:Sass::Tree::EachNode;iÉ:@has_childrenT;[o;;0;iÊ;o;;[o;	;iÊ;"new-list;	@;"new_listo;;[o;	;iÊ;"prefix;	@;"prefixo;	;iÊ;"v;	@;"v;iÊ;{ ;"prefixed-for-transition;	@;0;iÊ;{ ;"append;	@;0;"new-list;[ ;	@;	@:	@var"v:
@listo;	;iÉ;"property;	@;"propertyo:Sass::Tree::ReturnNode	;iÌ;o;	;iÌ;"new-list;	@;"new_list;[ ;	@;@;'0o;
;iÖ;["7/* Checks if the value given is a unit of time. */;	[ ;;;@o;5;![[o;";"
value;@;#"
value0;i×;"is-time;T;	[u;$[o:Sass::Script::Operation
:@operator:eq:
@lineiØ:@options{ :@operand2o:Sass::Script::String	;iØ:@value"number:
@type:identifier;	@:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;iØ:
@name"
value;	@:@underscored_name"
value;iØ:@keywords{ ;"type-of;	@:@splat0u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool;iÛ:@valueF:@options{ :@children[ ;
@	[o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	;:not;iÙ:@operando;	;;;iÙ;o;;[o:Sass::Script::List	:@separator:
space;iÙ;[o;	;iÙ;"s;;;	@o;	;iÙ;"ms;;;	@;	@o;;[o;	;iÙ;"
value;	@;"
value;iÙ;{ ;"	unit;	@;0;iÙ;{ ;"
index;	@;0;	@;	@:@children[ ;	@;@;'0;@